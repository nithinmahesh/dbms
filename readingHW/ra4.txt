Join optimization, as presented in the paper, is highly dependent on the effectiveness of cost estimation. How does the paper propose to compute the cost of a single relation access path? What statistics are used to estimate the cost of query plans? What are the benefits and limitations of this approach?

The paper proposes a scheme by which one can efficiently compute the cost of a certain query by clearly laying out different formulas and weights for different operations. For instance, TABLE 1 in the paper defines the weight factors for predicate selections and TABLE 2 defines the cost associated with different scanning operations based on whether we have an index or what type of index and so on. Statistics like cardinality counts, distribution of unique data, max, min values are used for computations of weight factors and costs. The downside of using these statistics is that for a frequently changing data, these statistics need to be refreshed often to ensure good plans are generated and if not done would result in bad plans and performance. 

In addition to computing the cost of a query plan, a query optimizer also needs (1) to define the space of possible plans that it will search and (2) it needs an algorithm to enumerate possible query plans within that space. What query plans does the paper consider? What algorithm does the paper propose to find the best plan in that space? What are the benefits and limitations of this approach?

The paper consides two types of plans - nested loops and merging scans. The algorithm to identify the best plan composes of first getting all the cardinalities of different relations to be joined, and then listing it out all possible plans in the form of a tree and then computing the costs for each operation through each possible option and then computing the most optimal one by choosing the best path in the tree. The benefit of this approach is that the plans can be cached and reused as long as no schema changes or index changes are done and the cardinality remains almost the same. The disadvantage is that if the data is frequently changing, one needs to refresh the plans every time the stats are updated